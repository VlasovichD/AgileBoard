// <auto-generated />
using System;
using DataAccessLayer.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190226004818_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccessLayer.Entities.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TO DO"
                        },
                        new
                        {
                            Id = 2,
                            Name = "In Progress"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Done"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColumnId");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColumnId = 1,
                            Description = "Description 1",
                            Name = "Ticket 1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColumnId = 2,
                            Description = "Description 2",
                            Name = "Ticket 2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            ColumnId = 3,
                            Description = "Description 3",
                            Name = "Ticket 3",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ColumnId = 1,
                            Description = "Description 4",
                            Name = "Ticket 4",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            ColumnId = 2,
                            Description = "Description 5",
                            Name = "Ticket 5",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            ColumnId = 3,
                            Description = "Description 6",
                            Name = "Ticket 6",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Smith",
                            PasswordHash = new byte[] { 82, 190, 124, 247, 54, 182, 128, 118, 34, 94, 68, 110, 203, 29, 215, 188, 181, 165, 51, 211, 112, 86, 105, 74, 31, 214, 75, 76, 116, 230, 126, 68, 71, 158, 102, 184, 189, 83, 53, 15, 165, 142, 134, 171, 99, 74, 67, 227, 101, 30, 170, 76, 167, 101, 87, 105, 223, 102, 117, 66, 134, 253, 126, 0 },
                            PasswordSalt = new byte[] { 117, 136, 59, 157, 135, 244, 200, 124, 92, 135, 60, 110, 47, 133, 255, 57, 104, 116, 193, 136, 240, 201, 135, 46, 87, 220, 160, 162, 244, 228, 136, 89, 245, 155, 119, 115, 47, 215, 138, 186, 93, 99, 178, 192, 86, 31, 130, 89, 203, 54, 155, 88, 145, 251, 141, 92, 166, 214, 194, 29, 220, 32, 100, 191, 157, 222, 171, 195, 60, 53, 239, 249, 32, 239, 126, 54, 150, 12, 31, 205, 213, 232, 148, 254, 112, 200, 204, 155, 223, 183, 242, 68, 149, 60, 156, 254, 54, 217, 218, 141, 199, 194, 57, 189, 84, 129, 250, 148, 182, 85, 238, 198, 239, 218, 106, 253, 219, 113, 224, 131, 199, 131, 207, 121, 196, 126, 212, 244 },
                            Username = "user1"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Ticket", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Column", "Column")
                        .WithMany("Tickets")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataAccessLayer.Entities.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
